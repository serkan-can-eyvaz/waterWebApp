pipeline {
    agent any

    environment {
        IMAGE_NAME = "aquashare-backend"
        CONTAINER_NAME = "aquashare-backend"
        GIT_CREDENTIALS_ID = "0b91579b-700e-4d1d-a0cf-0d55386b088f"
        GIT_REPO = "git@github.com:serkan-can-eyvaz/waterWebApp.git"
        DEPLOY_DIR = "/home/waterWebApp/backend_build/waterWebApp-backend"
    }

    stages {
        stage('Checkout') {
            steps {
                sshagent (credentials: ["${GIT_CREDENTIALS_ID}"]) {
                    git branch: 'main', url: "${GIT_REPO}"
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir('back-end/waterWebApp-backend') {
                    sh "mvn clean package -DskipTests"
                }
            }
        }

        stage('Copy to Deploy Directory') {
            steps {
                script {
                    sh """
                    mkdir -p ${DEPLOY_DIR}

                    # Backend build dosyalarını kopyala
                    rsync -av --ignore-missing-args target/ ${DEPLOY_DIR}/
                    """
                }
            }
        }

        stage('Clean Docker') {
            steps {
                script {
                    sh "docker container prune -f"
                    sh "docker image prune -af"
                    sh "docker volume prune -f"
                }
            }
        }

        stage('Build & Deploy with Docker Compose') {
            steps {
                dir("${DEPLOY_DIR}") {
                    script {
                        sh "docker compose down || true"
                        sh "docker compose build"
                        sh "docker compose up -d"
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Backend başarıyla deploy edildi!"
            echo "Backend API: http://localhost:9095"
        }
        failure {
            echo "Backend deploy başarısız!"
        }
    }
}